{"version":3,"sources":["components/GameBoard.js","components/Info.js","components/Announcement.js","App.js","index.js"],"names":["GameBoard","gameBoard","playerClickOnGameBoard","cellSelected","statusBoard","table","map","row","rIndex","tempRow","item","cIndex","className","startR","startC","onClick","Info","playerInputNumber","handleRestart","time","solveThePuzzle","myInputBoard","i","push","hours","Math","floor","seconds","minutes","timeToDisplay","class","Announcement","restart","close","App","result","temp","j","useState","setGameBoard","boardStatus","setBoardStatus","setCellSelected","setTime","closePopUp","setClosePopUp","isWin","setIsWin","getRndInteger","min","max","random","isSafeToUse","col","matrix","num","includes","isUnUsedInBox","isUnUsedInRow","isUnUsedInCol","fillAllOtherBox","startRow","startCol","size","createMatrix","k","fillThreeFirstBox","removeSomeCell","tempGameBoard","slice","x","y","tempStatus","startBoxR","startBoxC","status","checkWin","init","tempBoardStatus","solveSudoku","sudoku","handleKeyBoardEvent","event","keyCode","useEffect","intervalId","setInterval","clearInterval","window","addEventListener","removeEventListener","matrixToSolve","newStatusBoard","tempSudokuRow","tempStatusRow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebcc7ad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst GameBoard = ({gameBoard, playerClickOnGameBoard, cellSelected, statusBoard}) => {\r\n\r\n    let table = gameBoard.map((row, rIndex) => {\r\n        let tempRow = row.map((item, cIndex) => {\r\n            let className = \"cell\";\r\n            if((cIndex + 1)%3 === 0){\r\n                className += \" right-border-2\"\r\n            }\r\n            if(rIndex === cellSelected[0] && cIndex === cellSelected[1]){\r\n                className += \" is-selected\";\r\n            }\r\n            else if(rIndex === cellSelected[0] || cIndex === cellSelected[1]){\r\n                className += \" is-around-selected\";\r\n            }else {\r\n                if(cellSelected[0] >= 0 && cellSelected[1] >= 0){\r\n                    let startR = cellSelected[0] - cellSelected[0]%3;\r\n                    let startC = cellSelected[1] - cellSelected[1]%3;\r\n                    if(rIndex >= startR && rIndex < startR + 3 && cIndex >= startC && cIndex < startC + 3){\r\n                        className += \" is-around-selected\";\r\n                    }\r\n                }\r\n            }\r\n\r\n           \r\n\r\n            if(statusBoard[rIndex][cIndex] === 2){\r\n                className += \" player-number-ok\";\r\n            }\r\n            else if(statusBoard[rIndex][cIndex] === -1){\r\n                className += \" player-number-not-ok\"\r\n            }\r\n\r\n            return <td \r\n                        key={cIndex} \r\n                        className={className}\r\n                        onClick={()=>{\r\n                            playerClickOnGameBoard(rIndex, cIndex);\r\n                        }}\r\n                    >{item ? item : \"\"}</td>\r\n        })\r\n        return <tr key={rIndex}>{tempRow}</tr>\r\n    })\r\n\r\n\r\n    return (\r\n        <section className=\"game-board-container\">\r\n            <table className=\"game-board\">\r\n                <tbody>\r\n                    {table}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default GameBoard\r\n","import React from 'react'\r\n\r\nconst Info = ({playerInputNumber, handleRestart, time, solveThePuzzle}) => {\r\n\r\n    let myInputBoard = [];\r\n    for(let i = 0 ; i < 9 ; i++){\r\n        myInputBoard.push(<div\r\n                             key = {i+1}\r\n                            className=\"cell\"\r\n                            onClick={() => {\r\n                                playerInputNumber(i+1);\r\n                            }}\r\n                        >{i+1}</div>)\r\n    }\r\n   \r\n    let hours = Math.floor(time/3600);\r\n    let seconds = time%60;\r\n    let minutes = Math.floor((time%3600)/60);\r\n    let timeToDisplay ='';\r\n\r\n    if(hours >= 1){\r\n        timeToDisplay = <i class=\"fas fa-infinity\"></i>\r\n    }\r\n    else{\r\n        if(minutes < 10){\r\n            timeToDisplay += \"0\" + minutes + \":\";\r\n        }else{\r\n            timeToDisplay += minutes + \":\";\r\n        }\r\n        if(seconds < 10){\r\n            timeToDisplay += \"0\" + seconds;\r\n        }\r\n        else{\r\n            timeToDisplay += seconds;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"info-container\">\r\n            <div className=\"timer\">\r\n                <span><i className=\"far fa-clock\" />{timeToDisplay}</span>\r\n            </div>\r\n            <div className='input-board'>\r\n                {myInputBoard}\r\n                <div\r\n                    className=\"cell cell-0\"\r\n                    onClick={() => {\r\n                        playerInputNumber(0);\r\n                    }}\r\n                    \r\n                >0</div>\r\n            </div>\r\n            <div className=\"game-button\">\r\n                <button className=\"btn\" onClick={handleRestart}>Restart</button>\r\n                <button className=\"btn\" onClick={solveThePuzzle}>Get Answer</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\n\r\nconst Announcement = ({restart, close, time}) => {\r\n    let hours = Math.floor(time/3600);\r\n    let seconds = time%60;\r\n    let minutes = Math.floor((time%3600)/60);\r\n    let timeToDisplay ='';\r\n\r\n    if(hours >= 1){\r\n        timeToDisplay = <i class=\"fas fa-infinity\"></i>\r\n    }\r\n    else{\r\n        if(minutes < 10){\r\n            timeToDisplay += \"0\" + minutes + \":\";\r\n        }else{\r\n            timeToDisplay += minutes + \":\";\r\n        }\r\n        if(seconds < 10){\r\n            timeToDisplay += \"0\" + seconds;\r\n        }\r\n        else{\r\n            timeToDisplay += seconds;\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"announcement-container\">\r\n            <div className=\"announcement\">\r\n                <h1><i className=\"far fa-check-circle\" /></h1>\r\n                <h2>Congratulations !</h2>\r\n                <h4>You solved the puzzle in <i className=\"far fa-clock\" />{timeToDisplay}</h4>\r\n                <button className=\"btn\" onClick={restart}>Restart</button>\r\n                <button className=\"btn\" onClick={close}>Close</button>\r\n            </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Announcement\r\n","import React, {useState, useEffect} from 'react';\nimport GameBoard from './components/GameBoard';\nimport Info from './components/Info';\nimport Announcement from './components/Announcement';\nimport './App.css';\n\n\n\nfunction App() {\n\tconst size = 9;\n\tconst removeNum = 35;\n\tlet result = [];\n\tfor(let i = 0; i < size; i++){\n\t\tlet temp = [];\n\t\tfor(let j = 0 ; j < size ; j ++){\n\t\t\ttemp.push(0);\n\t\t}\n\t\tresult.push(temp);\n\t}\n\tconst [gameBoard, setGameBoard] = useState(result)\n\tconst [boardStatus, setBoardStatus] = useState(result);\n\t//BoardStatus = 1 là ô trống để điền\n\t//BoardStatus = -1 là player điền nhưng số sai\n\t//BoardStatus = 2 là player điền đúng\n\t//BoardStatus = 0 là ô có sẵn\n\tconst [cellSelected, setCellSelected] = useState([-1,-1])\n\tconst [time, setTime] = useState(0);\n\tconst [closePopUp, setClosePopUp] = useState(true);\n\tconst [isWin, setIsWin] = useState(false)\n\n\t\n\n\tfunction getRndInteger(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min + 1) ) + min;\n\t  }\n\n\t// const isSafeRow = (row, matrix) => {\n\t// \tlet myS = [...new Set(matrix[row])];\n\t// \treturn myS.length === 9;\n\t// }\n\n\t// const isSafeColumn = (col, matrix) => {\n\t// \tlet temp = [];\n\t// \tfor(let i = 0 ; i < size ; i ++){\n\t// \t\ttemp.push(matrix[i][col]);\n\t// \t}\n\t// \tlet myS = [...new Set(temp)];\n\t// \treturn myS.length === 9;\n\t// }\n\n\t// const isSafeBox = (row, col, matrix) => {\n\t// \tlet temp = [];\n\t// \tfor(let i = 0 ; i < 3 ; i++){\n\t// \t\tfor(let j = 0 ; j < 3 ; j ++){\n\t// \t\t\ttemp.push(matrix[i + row][j + col]);\n\t// \t\t}\n\t// \t}\n\t// \tlet myS = [...new Set(temp)];\n\t// \treturn myS.length === 9;\n\t// }\n\n\tconst isUnUsedInBox = (row, col, matrix, num) => {\n\t\tlet temp = [];\n\t\tfor(let i = 0 ; i < 3 ; i++){\n\t\t\tfor(let j = 0 ; j < 3 ; j ++){\n\t\t\t\ttemp.push(matrix[i + row][j + col]);\n\t\t\t}\n\t\t}\n\t\treturn !temp.includes(num);\n\t}\n\n\tconst isUnUsedInRow = (row, matrix, num) => {\n\t\treturn !matrix[row].includes(num);\n\t}\n\n\tconst isUnUsedInCol = (col, matrix, num) => {\n\t\tlet temp = [];\n\t\tfor(let i = 0 ; i < size ; i ++){\n\t\t\ttemp.push(matrix[i][col]);\n\t\t}\n\t\treturn !temp.includes(num);\n\t}\n\n\tconst isSafeToUse = (row, col, matrix, num) => {\n\t\treturn   isUnUsedInBox(row - row%3, col - col%3, matrix, num)&&isUnUsedInRow(row, matrix, num)&&isUnUsedInCol(col, matrix, num) ;\n\t}\n\n\tconst fillThreeFirstBox = (matrix) => {\n\t\tfor(let i = 0 ; i < size; i += 3){\n\t\t\tlet num = 0;\n\t\t\tfor(let j = 0 ; j < 3; j ++){\n\t\t\t\tfor(let k = 0 ; k < 3 ; k++){\n\t\t\t\t\tdo{\n\t\t\t\t\t\tnum = getRndInteger(1,size)\n\t\t\t\t\t}\n\t\t\t\t\twhile(!isSafeToUse(i + j, i + k, matrix, num));\n\t\t\t\t\tmatrix[i + j][i + k] = num;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst fillAllOtherBox = (matrix, startRow, startCol) => {\n\t\tif(startCol >= size && startRow < size - 1){\n\t\t\tstartRow += 1;\n\t\t\tstartCol = 0;\n\t\t}\n\t\tif(startCol >= size && startRow >= size){\n\t\t\treturn true;\n\t\t}\n\t\tif(startRow < 3){\n\t\t\tif(startCol < 3){\n\t\t\t\tstartCol = 3;\n\t\t\t}\n\t\t}\n\t\telse if(startRow < size - 3){\n\t\t\tif(startCol === Math.floor(startRow/3) * 3){\n\t\t\t\tstartCol += 3;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(startCol === size - 3){\n\t\t\t\tstartRow += 1;\n\t\t\t\tstartCol = 0;\n\t\t\t\tif(startRow >= size){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(let num =  1; num <= size; num ++){\n\t\t\tif(isSafeToUse(startRow, startCol, matrix, num)){\n\t\t\t\tmatrix[startRow][startCol] = num;\n\t\t\t\tif(fillAllOtherBox(matrix, startRow, startCol + 1)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tmatrix[startRow][startCol] = 0\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tconst removeSomeCell = (matrix, k) => {\n\t\tfor(let i = 0 ; i < k ; i++){\n\t\t\tlet temp = 0;\n\t\t\tdo {\n\t\t\t\ttemp = getRndInteger(0, 80);\n\t\t\t} while (!matrix[Math.floor(temp/size)][temp%size]);\n\t\t\tmatrix[Math.floor(temp/size)][temp%size] = 0;\n\t\t}\n\t}\n\n\tconst checkWin = (status) => {\n\t\tfor(let i = 0 ; i < size ; i++){\n\t\t\tfor(let j = 0 ; j < size; j++){\n\t\t\t\tif(status[i][j] === 1 || status[i][j]=== -1){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tconst playerClickOnGameBoard = (row, col) => {\n\t\n\t\tsetCellSelected([row, col]);\n\t}\n\n\tconst createMatrix = () =>{\n\t\tlet result = [];\n\t\tfor(let i = 0; i < size; i++){\n\t\t\tlet temp = [];\n\t\t\tfor(let j = 0 ; j < size ; j ++){\n\t\t\t\ttemp.push(0);\n\t\t\t}\n\t\t\tresult.push(temp);\n\t\t}\n\t\tfillThreeFirstBox(result);\n\t\tfillAllOtherBox(result, 0, 3);\n\t\tremoveSomeCell(result, removeNum);\n\t\treturn result;\n\t}\n\n\tconst playerInputNumber = (num) => {\n\t\tif(isWin){\n\t\t\treturn;\n\t\t}\n\n\t\tif(cellSelected[0] !== -1 && cellSelected[1] !== -1){\t\n\t\t\n\t\t\n\t\t\tif(boardStatus[cellSelected[0]][cellSelected[1]] !== 0){\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tlet tempGameBoard = gameBoard.map((row) => {\n\t\t\t\t\treturn row.slice();\n\t\t\t\t});\n\t\t\t\tlet x = cellSelected[0];\n\t\t\t\tlet y = cellSelected[1];\n\t\t\t\tlet tempStatus = boardStatus.map((row) => {\n\t\t\t\t\treturn row.slice();\n\t\t\t\t});\n\t\t\t\ttempGameBoard[x][y] = num;\n\t\t\t\t\n\t\t\t\tif(num !== 0){\n\t\t\t\t\ttempStatus[x][y] = 2;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttempStatus[x][y] = 1;\n\t\t\t\t}\n\t\t\t\tfor(let i = 0 ;i < 9 ; i++){\n\t\t\t\t\tif(tempStatus[x][i] !== 0 && tempStatus[x][i] !== 1){\n\t\t\t\t\t\tlet temp = tempGameBoard[x][i];\n\t\t\t\t\t\ttempGameBoard[x][i] = 0;\n\t\t\t\t\t\tif(isSafeToUse(x, i, tempGameBoard, temp)){\n\t\t\t\t\t\t\ttempStatus[x][i] = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttempStatus[x][i] = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttempGameBoard[x][i] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor(let i = 0 ;i < 9 ; i++){\n\t\t\t\t\tif(tempStatus[i][y] !== 0 && tempStatus[i][y] !== 1){\n\t\t\t\t\t\tlet temp = tempGameBoard[i][y];\n\t\t\t\t\t\ttempGameBoard[i][y] = 0;\n\t\t\t\t\t\tif(isSafeToUse(i, y, tempGameBoard, temp)){\n\t\t\t\t\t\t\ttempStatus[i][y] = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttempStatus[i][y] = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttempGameBoard[i][y] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet startBoxR = x - x%3;\n\t\t\t\tlet startBoxC = y - y%3;\n\t\t\t\tfor(let i = 0 ;i < 3 ; i ++){\n\t\t\t\t\tfor(let j = 0 ; j < 3 ; j++){\n\t\t\t\t\t\tif(tempStatus[startBoxR + i][startBoxC + j] !== 0 && tempStatus[startBoxR + i][startBoxC + j] !== 1){\n\t\t\t\t\t\t\tlet temp = tempGameBoard[startBoxR + i][startBoxC + j];\n\t\t\t\t\t\t\ttempGameBoard[startBoxR + i][startBoxC + j] = 0;\n\t\t\t\t\t\t\tif(isSafeToUse(startBoxR + i, startBoxC + j, tempGameBoard, temp)){\n\t\t\t\t\t\t\t\ttempStatus[startBoxR + i][startBoxC + j] = 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttempStatus[startBoxR + i][startBoxC + j] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttempGameBoard[startBoxR + i][startBoxC + j] = temp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetGameBoard(tempGameBoard);\n\t\t\t\tsetBoardStatus(tempStatus);\n\t\t\t\tlet tempIsWin = checkWin(tempStatus);\n\t\t\t\tif(tempIsWin){\n\t\t\t\t\tsetClosePopUp(false);\n\t\t\t\t\tsetIsWin(true);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\n\tconst init = () => {\n\t\tlet tempGameBoard = createMatrix();\n\t\tlet tempBoardStatus = tempGameBoard.map((row,rIndex) => {\n\t\t\tlet tempRow = row.map((item, rIndex) => {\n\t\t\t\treturn item !== 0 ? 0 : 1;\n\t\t\t})\n\t\t\treturn tempRow;\n\t\t})\n\t\tsetCellSelected([-1, -1])\n\t\tsetIsWin(false);\n\t\tsetClosePopUp(true);\n\t\tsetTime(0);\n\t\tsetGameBoard(tempGameBoard);\n\t\tsetBoardStatus(tempBoardStatus);\n\t}\n\n\tconst handleClosePopUp = () => {\n\t\tsetClosePopUp(true);\n\t}\n\n\tconst solveSudoku = (sudoku, row, col) =>{\n\t\tif(row === size - 1 && col === size){\n\t\t\treturn true;\n\t\t}\n\t\tif(col === size){\n\t\t\trow += 1;\n\t\t\tcol = 0;\n\t\t}\n\t\tif(sudoku[row][col] > 0){\n\t\t\treturn solveSudoku(sudoku,row, col + 1);\n\t\t}\n\n\t\tfor(let i = 1 ; i < 10 ; i++){\n\t\t\tif(isSafeToUse(row, col, sudoku, i)){\n\t\t\t\tsudoku[row][col] = i;\n\t\t\t\tif(solveSudoku(sudoku,row, col + 1)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsudoku[row][col] = 0;\n\t\t}return false;\n\t}\n\t\n\tconst solveThePuzzle = () =>{\n\t\tif(!isWin){\n\t\t\tsetIsWin(true);\n\t\t\tlet matrixToSolve = [];\n\t\t\tlet newStatusBoard = [];\n\t\t\tfor(let i = 0 ; i < size ; i++){\n\t\t\t\tlet tempSudokuRow = [];\n\t\t\t\tlet tempStatusRow = [];\n\t\t\t\tfor(let j = 0 ; j <size ; j++){\n\t\t\t\t\tif(boardStatus[i][j] === 0){\n\t\t\t\t\t\ttempSudokuRow.push(gameBoard[i][j]);\n\t\t\t\t\t\ttempStatusRow.push(0);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\ttempSudokuRow.push(0);\n\t\t\t\t\t\ttempStatusRow.push(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewStatusBoard.push(tempStatusRow);\n\t\t\t\tmatrixToSolve.push(tempSudokuRow);\n\t\t\t}\n\t\t\tsolveSudoku(matrixToSolve, 0, 0);\n\t\t\t\n\t\t\tsetBoardStatus(newStatusBoard);\n\t\t\tsetGameBoard(matrixToSolve);\n\t\t}\n\t}\n\n\tconst handleKeyBoardEvent = (event) => {\n\t\tlet key = event.keyCode;\n\t\tlet num = 0;\n\t\tswitch (key) {\n\t\t\tcase 49: case 97: \n\t\t\t\tnum = 1;\n\t\t\t\tbreak;\n\t\t\tcase 50: case 98: \n\t\t\t\tnum = 2;\n\t\t\t\tbreak;\n\t\t\tcase 51: case 99: \n\t\t\t\tnum = 3;\n\t\t\t\tbreak;\n\t\t\tcase 52: case 100: \n\t\t\t\tnum = 4;\n\t\t\t\tbreak;\n\t\t\tcase 53: case 101: \n\t\t\t\tnum = 5;\n\t\t\t\tbreak;\n\t\t\tcase 54: case 102: \n\t\t\t\tnum = 6;\n\t\t\t\tbreak;\n\t\t\tcase 55: case 103: \n\t\t\t\tnum = 7;\n\t\t\t\tbreak;\n\t\t\tcase 56: case 104: \n\t\t\t\tnum = 8;\n\t\t\t\tbreak;\n\t\t\tcase 57: case 105: \n\t\t\t\tnum = 9;\n\t\t\t\tbreak;\n\t\t\tcase 48: case 96: \n\t\t\t\tnum = 0;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tplayerInputNumber(num);\n\t}\t\n\n\tuseEffect(() => {\n\t\tinit();\n\t\t\n\t},[])\n\n\tuseEffect(() => {\n\t\tif(!isWin){\n\t\t\tlet intervalId = setInterval(()=>{\n\t\t\t\tlet temp = time + 1;\n\t\t\t\tsetTime(temp);\n\t\t\t}, 1000)\n\t\n\t\t\treturn () => {\n\t\t\t\tclearInterval(intervalId);\n\t\t\t}\n\t\t}\n\t},[time])\n\n\tuseEffect(()=>{\n\t\twindow.addEventListener(\"keydown\", handleKeyBoardEvent)\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"keydown\", handleKeyBoardEvent)\n\t\t}\n\t})\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<section className=\"header\">\n\t\t\t\t<h1>SUDOKU</h1>\n\t\t\t</section>\n\t\t\t\n\t\t\t<GameBoard\n\t\t\t\tgameBoard={gameBoard}\n\t\t\t\tcellSelected={cellSelected}\n\t\t\t\tstatusBoard = {boardStatus}\n\t\t\t\tplayerClickOnGameBoard={playerClickOnGameBoard}\n\t\t\t></GameBoard>\n\t\t\t\n\t\t\t<Info\n\t\t\t\tplayerInputNumber={playerInputNumber}\n\t\t\t\thandleRestart={init}\n\t\t\t\tsolveThePuzzle={solveThePuzzle}\n\t\t\t\ttime={time}\n\t\t\t></Info>\n\n\n\t\t\t{closePopUp ? \"\" : <Announcement time={time} restart={init} close={handleClosePopUp}></Announcement>}\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}